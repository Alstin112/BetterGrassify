plugins {
    id 'fabric-loom' version '1.6.+'
}

// for snapshots
def mcVer = ""
for (char c in (property('deps.minecraft_version') as List<Character>)) {
    if (c.toString() != '-') {
        mcVer += c
    }
}

version = project.mod_version + "+" + mcVer
group = project.maven_group

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven { url "https://maven.isxander.dev/releases" }
}

dependencies {
    minecraft "com.mojang:minecraft:${property('deps.minecraft_version')}"
    mappings "net.fabricmc:yarn:${property('deps.yarn_mappings')}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${property('deps.fabric_version')}"
    modImplementation "dev.isxander:yet-another-config-lib:${property('deps.yacl_version')}"
    modImplementation "maven.modrinth:modmenu:${property('deps.modmenu_version')}"
    modImplementation "maven.modrinth:sodium:${property('deps.sodium_version')}"
}

loom {
    runConfigs.all {
        ideConfigGenerated true
        runDir "../../run"
    }
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
