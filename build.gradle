plugins {
    id 'dev.architectury.loom' version '1.5.+'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url "https://maven.su5ed.dev/releases"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"

    modCompileOnly "maven.modrinth:embeddium:${project.embeddium_version}"
    modCompileOnly "dev.su5ed.sinytra.fabric-api:fabric-api:${project.ffapi_version}"
    modLocalRuntime "maven.modrinth:architectury-api:${project.architectury_version}"
    modCompileOnly "maven.modrinth:yacl:${project.yacl_version}"
}

loom {
    forge {
        mixinConfigs = [
                "ForgeBetterGrass.mixins.json"
        ]
    }
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
